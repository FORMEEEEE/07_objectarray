package edu.kh.oarr.run;

import edu.kh.oarr.model.vo.service.MemberService;

public class MemberRun {

	public static void main(String[] args) {

		MemberService ms = new MemberService();
		ms.displayMenu();
	}

	//getter setter
	// 초기화 순서
	// 배열 특징

	 //배열 초기화 3가지

	// 깊은복사 
	// 얕은복사
	/*
	 * 프로그래밍 언어 특징
	 * 1. os에 독립적이다
	 * 2. 사용하기 쉬운 언어
	 * 3. 멀티쓰레드 지원
	 * 4. 객체 지향 프로그래밍 언어
	 * 5. 자동 메모리 관리
	 * 
	 *배열의 정의
	 * 같은 자료형의 변수를 하나의 묶음으로 다루는것
	 * 
	 * 배열의 특징
	 * 크기를 한번 정하면 바꿀 수 없음
	 * 같은 자료형만 저장가능
	 * 많은 값 저장가능
	 * 
	 * 변수 초기화방법
	 * index
	 * arr[1] = 1;
	 * for문
	 * 
	 * 선언과 동시에 초기화
	 * int arr[] = new int[]{1,2,3,4,5}
	 * 
	 * 얕은복사 주소를 복사하여 서로 다른 두 변수가 *(같은주소)*
	 * 하나의 배열(또는 객체)을 참조하는 상태를 만드는 복사 방법
	 * 
	 * 깊은복사 같은 자료형의 새로운 배열을 만들어서 
	 * 기존 배열의 데이터를 모두 복사하는 방법
	 * 
	 * 깊은복사 초기화방법
	 * for문 i = 0 i < arr.length i++ arr2[i] = arr1[i] 
	 * 
	 * system.arrayCopy(arr1,0,arr2,0,arr1.length)
	 * 
	 * arrays.copyof(arr1, arr1.length)
	 * 
	 * 
	 * */
	
	
	
	
	
	
	
	
	
	
	//변수는 변할 수 있는수
	// 메모리에 값을 기록하기 위한 공간
	
	// 변수 사용목적 : 코드 길이 감소 가독성 증가 유지보수 용이
	
	// 변수 명명규칙 : 대소문자구분 길이 상관제한없음
	// 앞글자에 숫자사용불가 특수문자 _$제외 사용불가
	// camelcase사용 단어의 첫글자는 소문자가 관례
	// 예약어 사용불가
	
	
	//상수 상수는 수학적 의미로 변하지 않는수
	// 상수는 자바에서 한번만 저장 할 수 있는 메모리
	
	//형변환 
	/*강제형변환 큰 값의 자료형을 작은 값으로 강제변환 데이터의 손실을 감수
	 * 자동형변환 컴파일러가 작은 값의 자료형을 큰 값의 자료형으로 자동변환
	 * 
	 * 형변환 처리방식
	 * 같은 자료형만 대입가능
	 * 같은 자료형만 계산가능
	 * 계산결과도 같은 종류의 값이 나와야함
	 * 데이터 오버플로우
	 * 허용된 비트의 값을 초과하는 경우 byte형의 경우 -128~127까지인데 127+1하면 -128로 돌아가는것을 의미
	 * 
	 * 조건문의 종류 if switch
	 * if = 조건식이 true일때 내부 코드 수행
	 * switch는 조건식 하나로 여러 값을 처리할때 사용
	 * 
	 * 반복문 종류
	 * for while if while
	 * for문은 반복 횟수가 정해져있을때 사용 한번도 실행되지않을 수있다
	 * while 문 반복 횟수가 정해져있지 않고 ''
	 * if while 반복횟수가 정해져있지 않고 반복 여부를 결정짓는 조건식이 아래에 있어 한번은 수행됨
	 * 
	 * 
	 * 
	 * 객체지향 3대특징 캡슐화 추상화 상속 다형성
	 * 
	 * 자바에서 객체란? new생성자를 통해 메모리에 생성된것
	 * 
	 * 배열 초기화방법?
	 * index를이용한 방법
	 * arr[1] = 0;
	 * 
	 * for i
	 * 
	 * 선언과동시에초기화
	 * 
	 * int arr[] = new int[]{1,2,3}
	 * 
	 * 추상화는뭐임?
	 * 필요한 정보를 추출하고 불필요한 부분 제거
	 * 
	 * 캡슐화는?
	 * 추상화를 통해 걸러진 데이터들을 기능과 함께묶어 관리
	 * 데이터의 직접접근을 막음
	 * 정보은닉효과발생
	 * 
	 * 인스턴스변수는 뭐임? 
	 *  필드에 작성되는 일반 변수(객체 미생성시 사용 불가)
	 * 클래스변수는뭐임? 멤버변수종류 = 클래스 인스턴스변수
	 * 필드에 static 예약어가 작성된 변수(객체 생성 안해도 쓸 수 있음)
	 * */
}
